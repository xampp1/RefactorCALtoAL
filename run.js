const replace = require('replace-in-file');
const results = replace.sync({
  files: 'path/folder*.al',
  from: [/IF/g, 
    /THEN/g, 
    /BEGIN/g, 
    /END/g, 
    /ELSE/g, 
    /FORMAT/g, 
    /STRSUBSTNO/g, 
    /PADSTR/g, 
    /COPYSTR/g, 
    /SETRANGE/g, 
    /SETFILTER/g, 
    /RESET/g, 
    /COMMIT/g, 
    /MODIFY/g, 
    /INSERT/g, 
    /TABLECAPTION/g, 
    /STRLEN/g, 
    /INIT/g, 
    /WHILE/g, 
    /DO/g, 
    /FOR/g, 
    /TRUE/g,
    /FALSE/g,
    /EXIT/g,
    /LOCAL/g,
    /PROCEDURE/g,
    /ISEMPTY/g,
    /FINDFIRST/g,
    /FIND('-')/g,
    /FINDSET/g,
    /FINDLAST/g,
    /FIND('+')/g,
    /EXISTS/g,
    /RENAME/g,
    /SETCURRENTKEY/g,
    /ERASE/g,
    /OPEN/g,
    /CREATE/g,
    /CLOSE/g,
    /EXPORT/g,
    /IMPORT/g,
    /CREATEINSTREAM/g,
    /CREATEOUTSTREAM/g,
    /REPEAT/g,
    /WHILE/g,
    /NEXT/g,
    /GET/g,
    /TESTFIELD/g,
    /VALIDATE/g,
    /EVALUATE/g,
    /NOT/g,
    /AND/g,
    /RUN/g,
    /RUNMODAL/g,
    /SETTABLEVIEW/g,
    /WRITEMODE/g,
    /MESSAGE/g,
    /ERROR/g,
    /CONFIRM/g,
    /DELCHR/g,
    /TIME/g,
    /WORKDATE/g,
    /CURRENTDATETIME/g,
    /DATE/g,
    /OR/g,
    /CURRENT/g,
    /INSTREAM/g,
    /OUTSTREAM/g,
    /MODifY/g,
    /Modify;/g,
    /Modify /g,
    /insert/g,
    /Insert;/g,
    /Insert /g,
    /CLEAR/g,
    /Get;/g,
    /TABLE/g,
    /PAGE/g,
    /XMLPORT/g,
    /REPORT/g,
    /CODEUNIT/g,
    /SKIP/g,
    /Skip;/g,
    /BREAK/g,
    /Break;/g,
    /FindFirst /g,
    /FindFirst;/g,
    /FindLast /g,
    /FindLast;/g,
    /IN/g,
    /CALCDATE/g,
    /CALC/g,
    /DELETE/g,
    /Delete /g,
    /Delete;/g,
    /ALL/g,
    /All /g,
    /All;/g,
    /SLEEP/g,
    /COUNT/g,
    /USERID/g,
    /Commit;/g,
    /CONVERTSTR/g,
    /STRPOS/g,
    /UPD/g,
    /FindSet /g,
    /ROUND/g,
    /NAME/g,
    /POSITION/g,
    /init/g,
    /Init;/g,
    /reset;/g,
    /Reset;/g,
    /UPPERCASE/g,
    /LOWERCASE/g,
    /UNTIL/g,
    /CASE/g,
    /TEMPFILE/g,
    /TEXTMODE/g,
    /READTEXT/g,
    /WRITETEXT/g,
    /IsEmpty /g,
    /LOCKTABLE/g,
    /begin end;/g,
    /MAX/g,
    /COMPANY/g,
    /DeleteAll;/g,
    /TEST/g,
    /TEST/g,
    /TEST/g,
    /TEST/g,
    /TEST/g,
    /TEST/g,
    /TEST/g,
    /TEST/g,
    /TEST/g,
    /TEST/g,
    /TEST/g,
    /TEST/g,
  ],
  to: ['if', 
    'then', 
    'begin', 
    'end', 
    'else', 
    'Format', 
    'StrSubstNo', 
    'PadStr', 
    'CopyStr', 
    'SetRange', 
    'SetFilter', 
    'Reset', 
    'Commit', 
    'Modify', 
    'Insert', 
    'TableCaption', 
    'StrLen', 
    'Init', 
    'while', 
    'do', 
    'for', 
    'true', 
    'false',
    'exit', 
    'local', 
    'procedure',
    'IsEmpty', 
    'FindFirst', 
    'FindFirst()',
    'FindSet',
    'FindLast',
    'FindLast()',
    'Exists',
    'Rename',
    'SetCurrentKey',
    'Erase',
    'Open',
    'Create',
    'Close',
    'Export',
    'Import',
    'CreateInStream',
    'CreateOutStream',
    'repeat',
    'while',
    'Next',
    'Get',
    'TestField',
    'Validate',
    'Evaluate',
    'not',
    'and',
    'Run',
    'RunModal',
    'SetTableView',
    'WriteMode',
    'Message',
    'Error',
    'Confirm',
    'DelChr',
    'Time',
    'WorkDate',
    'CurrentDateTime',
    'Date',
    'or',
    'Current',
    'InStream',
    'OutStream',
    'Modify',
    'Modify();',
    'Modify() ',
    'Insert',
    'Insert();',
    'Insert() ',
    'Clear',
    'Get();',
    'Table',
    'Page',
    'Xmlport',
    'Report',
    'Codeunit',
    'Skip',
    'Skip();',
    'Break',
    'Break();',
    'FindFirst() ',
    'FindFirst();',
    'FindLast() ',
    'FindLast();',
    'in',
    'CalcDate',
    'Calc',
    'Delete',
    'Delete() ',
    'Delete;',
    'All',
    'All() ',
    'All;',
    'Sleep',
    'Count',
    'UserID',
    'Commit();',
    'ConvertStr',
    'StrPos',
    'Upd',
    'FindSet() ',
    'Round',
    'Name',
    'Position',
    'Init',
    'Init();',
    'Reset;',
    'Reset();',
    'UpperCase',
    'LowerCase',
    'until',
    'case',
    'TempFile',
    'TextMode',
    'ReadText',
    'WriteText',
    'IsEmpty() ',
    'LockTable',
    ';',
    'Max',
    'Company',
    'DeleteAll();',
    'TEST',
    'TEST',
    'TEST',
    'TEST',
    ], 

  countMatches: true,
});

console.log(results);